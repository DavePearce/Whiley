#!/bin/bash
#!/bin/sh

# This file is part of the Whiley Development Kit (WDK).
#
# The Whiley Development Kit is free software; you can redistribute 
# it and/or modify it under the terms of the GNU General Public 
# License as published by the Free Software Foundation; either 
# version 3 of the License, or (at your option) any later version.
#
# The Whiley Development Kit is distributed in the hope that it 
# will be useful, but WITHOUT ANY WARRANTY; without even the 
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
# PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public 
# License along with the Whiley Development Kit. If not, see 
# <http://www.gnu.org/licenses/>
#
# Copyright 2010, David James Pearce. 
# modified 2012,	Art Protin <protin2art@gmail.com>

################
# CONFIGURATION
################

DIR=`dirname "$0"`/..
MyName=${0##*/}
LIBDIR=$DIR/lib
LIBS="wyc wyil wycc"

# check for running under cywin
cygwin=false
case "`uname`" in
  CYGWIN*) cygwin=true ;;
esac

######################
# CONSTRUCT CLASSPATH
######################

if $cygwin; then
    # under cygwin the classpath separator must be ";"
    LIBDIR=`cygpath -pw "$LIBDIR"`
    PATHSEP=";"
else
    # under UNIX the classpath separator must be ":"
    PATHSEP=":"
fi

WHILEY_CLASSPATH=$CLASSPATH

#
# as there may more than one version of the jar files
# it is important to first use the * expansion, and then
# use the last one via the "##* " expansion.
#
for lib in $LIBS
do
    #JAR=$(ls $LIBDIR/$lib*.jar)
    tmp=$(echo $LIBDIR/${lib}-v*.jar)
    JAR=${tmp##* }
    case "$JAR" in 
    *\**)
        echo "Library '$lib' not found"
        exit 2
        ;;
    esac
    WHILEY_CLASSPATH="$JAR$PATHSEP$WHILEY_CLASSPATH"
done

#WYRT_JAR=$(ls $LIBDIR/wyrt-v*.jar)
tmp=$(echo $LIBDIR/wyrt-v*.jar)
WYRT_JAR=${tmp##* }
WHILEY_BOOTPATH="$WYRT_JAR"

WYCC="java -server -Xmx128M -cp $WHILEY_CLASSPATH wycc.WyccMain -bp $WHILEY_BOOTPATH"
WYCC_OPTS=
WYCC_LIB=${LIBDIR}/wycc_lib.o
WYCC_GCC_OPTS="-I $LIBDIR"

usage() {
    if [ -n "$1" ]
    then
	echo $@
	xsts=-1
    fi

    echo $MyName '$options $mainfile $otherfiles'
    echo '	where options are one or more of the following:'
    echo '	-W	only compile whiley to generate C'
    echo '	-B	skip the whiley compilation and build from the .c'
    echo '	-C	Compile Whiley and compile c to .o file'
    echo '	-S	Compile Whiley and compile c to .s file'
    echo '	-D	Sprinkle the .c file with diagnostic comments (default)'
    echo '	-E	Execute the program after compiling & building'
    echo '	-q	quiet == suppress as much stderr, stdout as possible'
    echo '	-h	display this usage message'
    echo
    echo 'only the main file will be processed by the Whiley compiler'
    echo 'other files are assumed to be .c, .s, .o, or libraries'
    echo 'Any executable will be named with the basename of $mainfile'
    exit ${xsts:0}
}

two=:
FileName=
Other=
Opts=
SaveOpt="$@"
ToO=:
ToB=:
ToX=false
#BuildOnly=false
ToS='-c'
Debug=false
Decho=:
Vecho=:
Necho=echo

while [[ $# -gt 0 ]]
do
    case "$1" in
    -B)		# skip the whiley compilation and build from the .c
	    #BuildOnly=:
	    WYCC=:
	    ;;
    -W)		# only do whiley compilation
	    ToO=false
	    ;;
    -C)		# Compile Whiley and compile c to .o file
	    ToB=false
	    ;;
    -S)		# Compile Whiley and compile c to .s file
	    ToB=false
	    ToS='-s'
	    ;;
    -D)		# Compile Whiley with gobs of diagnostic comments
	    Debug=:
	    ;;
    -h)		# Give the usage message
	    two="usage"
	    ;;
    -q)		# quiet the whole process
	    Necho=:
	    ;;
    -g)		# we want debugging info
	    Necho=:
	    # WYCC_GCC_OPTS="-fbounds-checking $WYCC_GCC_OPTS"
	    WYCC_GCC_OPTS="-ggdb $WYCC_GCC_OPTS"
	    ;;
    -E)		# continue with the execution of the built
	    ToX=:
	    ;;
    -x)		# continue with the execution of the built
	    WYCC_OPTS=-no_numbers
	    ;;
    -v)		# continue with the execution of the built
	    Vecho=echo
	    ;;
    -*)
	    #Opts="$Opts $1"
	    #echo "unknown option '$1'"
	    two="usage unknown option '$1' "
	    ;;
    *)
	    if [[ -z "$FileName" ]]
	    then
		FileName="$1"
	    else
		Other="$Other $1"
	    fi
    esac
    shift
done

if $Debug
then
    Decho=echo
fi
BaseName=${FileName%%.*}
CName=${BaseName}.c
$Decho "wjcc  filename is '$FileName', Opts is '$Opts', Other is '$Other'"
$Decho "Basename is $BaseName and CName is $CName"

$two

# if [ "$WYCC" = ':' ]
# then

# java -server -Xmx128M -cp "$WHILEY_CLASSPATH" wycc.WyccMain -bp "$WHILEY_BOOTPATH" "$FileName"
$WYCC $WYCC_OPTS "$FileName"

xit=$?
if [[ $xit != 0 ]]
then
    echo "wycc compiler failed"
    exit $xit
fi

$Necho "wycc succeeded"
$ToO || exit 0

$Vecho gcc $WYCC_GCC_OPTS $ToS $CName 
gcc $WYCC_GCC_OPTS $ToS $CName 

$ToB || exit 0

$Vecho gcc -o $BaseName $BaseName.o $WYCC_LIB
gcc -o $BaseName $BaseName.o $WYCC_LIB

$ToX || exit 0

./$BaseName
